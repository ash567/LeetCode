class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        unordered_map<int, int> color;
        queue<int> nodes;
        for(int i = 0; i < graph.size(); i++) {
            if(color.find(i) == color.end()) {
                nodes.push(i);
                color[i] = -1;
                while(!nodes.empty()) {
                    int n = nodes.front();
                    nodes.pop();
                    int c = color[n];
                    for(int j : graph[n]) {
                        if(color.find(j) == color.end()) {
                            nodes.push(j);
                            color[j] = color[n] * (-1);
                        } else {
                            if(color[j] != -1 * color[n])
                                return false;
                        }
                    }
                }
            }
        }
        return true;
    }
};
